/****************************************************************
******** Language : C *******************************************
************** OS : Windows ************************************
*********************** IDE : Dev C++  and  VScode **************
********************************** Let's start! ********************
******************************************************************/

// # 4. 이중 for문 & 이중 while문

#include <stdio.h>

int main()
{
	int a,b;
	
	for (a=2; a<=9; a++)
	{
		for (b=1; b<=9; b++)
		{
			printf("%d * %d = %d\n",a,b,a*b);
		}
		printf("------------------\n");
	}	
	
	return 0;
}


이번에는 # 3번에서 upload한 for문에 대해 좀 더 다루고자 합니다.
- Outer Loop?? Inner Loop??
§ 위의 소스코드에서 밖에 있는 for문을 Outer Loop / 안에 있는 for문을 Inner Loop라고 합니다.
실행순서는 Outer Loop -> .... -> 2nd Inner Loop -> 1st Inner Loop ->로 가는거라 이해하시면 됩니다. 
여기서 첫번째라는 것은 가장 안쪽에 있는 반복문을 말합니다.

for (a=2; a<=9; a++)
	{
		for (b=1; b<=9; b++)
		{
			for (c=1; c<=9; c++)
			{
				.........
			}
			
		}
		printf("------------------\n");
	}
  
이 코드를 예로 들면 c=1가 있는 for문이 첫번째 Inner Loop가 됩니다. 
따라서, 숫자로 나열하면 다음과 같습니다.

1) Outer Loop a = 2
2) 2nd Inner Loop b = 1
3) 1st Inner Loop c = 1 -> 2 -> 3 -> .... -> 9
4) 2nd Inner Loop b = 2
3) 1st Inner Loop c = 1 -> 2 -> 3 -> .... -> 9
.
.
.
??) Outer Loop a = 9
??+1) 2nd Inner Loop b = 1
??+2) 1st Inner Loop c = 1 -> 2 -> 3 -> .... -> 9
.
.
.
Last-3) 2nd Inner Loop b = 8
Last-2) 1st Inner Loop c = 1 -> 2 -> 3 -> .... -> 9
Last-1) 2nd Inner Loop b = 9
Last) 1st Inner Loop c = 1 -> 2 -> 3 -> .... -> 9

Finish.


이중 while문도 동일합니다. 소스코드를 한번 보겠습니다.
#include <stdio.h>

int main()
{
	int a=1;
	int b=1;
	
	while(a<9)
	{
		b=1;  // Important Point! Have to Init!
		while(b<9)
		{
			printf("b value is : %d \n",b);
			b++;
		}
		printf("------------\n");
		printf("a value is : %d \n",a);
		printf("------------\n");
		a++;
	}
	return 0;
}

앞에서 배웠던대로, while문의 구조에 맞게 초기값을 while문 위에다 선언했습니다.
그리고 조건식은 while 옆에다 적어두었고,
증감식은 while문 몸체에다 넣었습니다.

다만 while문을 이중으로 쓸 때, 중요한 것은 Inner Loop의 반복이 끝날 경우 초기화를 반드시 해줘야 한다는 것입니다.
제가 위 소스코드에다 'Important Point!'라고 주석처리 한 부분입니다. 
저 부분을 넣지않으면 while문의 반복은 a=1일 때 b=1,2 .... ,8 에서 끝납니다.
a=2로 넘어가려고 할 때 b는 1로 초기화된게 아니라 9에서 시작하는걸로 인식이 됩니다. 근데 Inner Loop의 조건식에 따르면
b는 9보다 작을 경우에만 반복을 시행하라는 것이기 때문에 우리가 예상한 결과와는 다른 결과를 내게 됩니다.
