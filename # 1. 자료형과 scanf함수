/****************************************************************
******** Language : C *******************************************
************** OS : Windows ************************************
*********************** IDE : Dev C++  and  VScode **************
********************************** Let's start! ********************
******************************************************************/

// # 1. 자료형과 scanf함수

#include <stdio.h>

int main()
{
	int input;
	printf("Hello? Can you let me know your favorite number? : ");
	scanf_s("%d",&input);
	
	printf("%d? Thank you. Actually i didn't interesting. Bye!\n",input);
	
	return 0;
}


저번 포스팅 때는 가장 기본적인 main함수의 틀에 대해 알아봤었다.
이번에는 자료형에 대한 이해와 scanf를 보고자 한다.

- scanf? scanf_s??
§ 이 부분은 한번 짚고 넘어갈 필요가 있다. 일부 IDE에서는 scanf를 쓰면 컴파일에러가 나는 경우가 있다.
나중에 배우겠지만 정수,실수 자료형같은 타입을 입력받고자할 때는 scanf가 별 문제되진 않지만
문자,문자열을 입력받고자 할 때는 '버퍼 오버플로우' 라는 현상이 발생하여 컴파일 에러가 나곤 한다.
당연히 아직 무슨 말인지 모를 것이다. 이 부분은 문자열에 대해 배울 때 설명할 것이니까 이번 글에서 여러분들이 기억해야할 점.
scanf보다는 scanf_s 를 적극적으로 활용하도록 하자. Visual Studio Code같이 Microsoft사에서 제공하는 IDE들은 scanf를 못 쓰기도 한다.
------------------------------------------------------------------------------------------------------------------


- %d?? &?? 이게 뭐야?
§ 자료형 타입 중 하나로 정수를 입력받고자 할 때 사용하는 형식지정자이다.
int (정수형), 4Byte -> %d
float (실수형), 4Byte -> %f
double (실수형), 8Byte -> %lf  (* l 이거 L의 소문자다. i의 대문자 아니다! *)
char (문자형), 1Byte -> %c
char (문자열), 1Byte -> %s  (문자열은 아까도 말했지만 추후에 설명할 것이다.)
short (정수형), 2Byte -> %hd (%d로 해도 문제는 없다.)

§ OK,OK! 그럼 하나씩 가보자!
각각 자료형 타입은 -> 오른쪽에다 적어준 형식지정자들과 대응되는 개념이다.
형식지정자는 꼭 지켜줘야한다. 대략적인 감이 오겠지만 숫자에 있어서
short -> int -> float -> double 의 오름차순이 이뤄지고 있음을 느꼈을 것이다.

https://t1.daumcdn.net/cfile/tistory/2535004C585FD1E01B?download
위 링크는 C언어 자료형 타입들의 범위와 크기를 가시화하여 보여주고 있다. (필자의 블로그가 아님)
------------------------------------------------------------------------------------------------------------------

Q. 2022 라는 숫자를 입력받기 위해선 어떤 형식지정자를 사용해야할까?
A. [    ]



%d 라고 답하지 않았어도 괜찮다. 사람은 망각의 동물이니까!
------------------------------------------------------------------------------------------------------------------
§ 근데 scanf_s 함수를 통해 값을 입력받을 때 처음보는 기호가 있다. & (앰퍼샌드)는 C언어에서 굉장히 중요하다.
변수의 주소값을 호출할 때 쓰는 것이기 때문이다. 즉, scanf_s("%d",&input);의 의미는 다음과 같다.

1. 정수형 자료 타입을 입력받을 건데요~
2. 그 정수형 변수는 input으로 할테니 input이 있는 메모리주소를 불러오겠습니다.

라고 보면된다.
------------------------------------------------------------------------------------------------------------------
§ 마지막으로 입력받은 정수값을 printf로 출력하고자 할 때이다.
코드를 보면  printf("%d? Thank you. Actually i didn't interesting. Bye!\n",input);  에서 문자열 뒤에 , input라는게 보인다.
scanf_s 때와 다르게 주소값이 아닌 변수 input의 값을 불러온다.
그러면 printf에도 역시 변수 input 값을 출력하기 위해서 input에 대응되는 형식지정자가 필요하다.
이미 위에서 정수형 타입으로 입력을 받았으므로 %d를 입력한다. 

* 만약 정수형 타입인데도 범위가 더 큰 %f 같은걸로 입력을 받는다면 컴파일 에러가 뜨거나 이상한 값 (쓰레기 값)이 출력될 것이다.
