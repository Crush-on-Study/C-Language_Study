/****************************************************************
******** Language : C *******************************************
************** OS : Windows ************************************
*********************** IDE : Dev C++  and  VScode **************
********************************** Let's start! ********************
******************************************************************/

// # 1. 자료형과 scanf함수

#include <stdio.h>

int main()
{
	int input;
	printf("Hello? Can you let me know your favorite number? : ");
	scanf_s("%d",&input);
	
	printf("%d? Thank you. Actually i didn't interesting. Bye!\n",input);
	
	return 0;
}


저번 포스팅 때는 가장 기본적인 main함수의 틀에 대해 알아봤었다.
이번에는 자료형에 대한 이해와 scanf를 보고자 한다.

- scanf? scanf_s??
§ 이 부분은 한번 짚고 넘어갈 필요가 있다. 일부 IDE에서는 scanf를 쓰면 컴파일에러가 나는 경우가 있다.
나중에 배우겠지만 정수,실수 자료형같은 타입을 입력받고자할 때는 scanf가 별 문제되진 않지만
문자,문자열을 입력받고자 할 때는 '버퍼 오버플로우' 라는 현상이 발생하여 컴파일 에러가 나곤 한다.
당연히 아직 무슨 말인지 모를 것이다. 이 부분은 문자열에 대해 배울 때 설명할 것이니까 이번 글에서 여러분들이 기억해야할 점.
scanf보다는 scanf_s 를 적극적으로 활용하도록 하자. Visual Studio Code같이 Microsoft사에서 제공하는 IDE들은 scanf를 못 쓰기도 한다.
---------------------------------------------------------


- %d?? 이게 뭐야?
§ 자료형 타입 중 하나로 정수를 입력받고자 할 때 사용하는 형식지정자이다.
int (정수형), 4Byte -> %d
float (실수형), 4Byte -> %f
double (실수형), 8Byte -> %lf  (* l 이거 L의 소문자다. i의 대문자 아니다! *)
char (문자형), 1Byte -> %c
char (문자열), 1Byte -> %s  (문자열은 아까도 말했지만 추후에 설명할 것이다.)
short (정수형), 2Byte -> %hd (%d로 해도 문제는 없다.)

§ OK,OK! 그럼 이제 위에꺼 하나씩 설명 해줄 수 있나?
각각 자료형 타입은 -> 오른쪽에다 적어준 형식지정자들과 대응되는 개념이다.
형식지정자는 꼭 지켜줘야한다. 대략적인 감이 오겠지만 숫자에 있어서
short 
---------------------------------------------------------
