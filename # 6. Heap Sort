// 31. Heap Sort Algorithm

#include <stdio.h>

int number = 10;
int heap[10] = {6,10,3,5,4,2,7,8,1,9};

int main()
{
		int i,change,root,c;
		for (i=1; i<number; i++)
		{
			c = i;
			do {
				root = (c-1)/2;
				if (heap[root] < heap[c])
				{
					change = heap[root];
					heap[root] = heap[c];
					heap[c] = change;
				}
				c = root;
			}
			while (c != 0);
		}
	
	
	for (i=number-1; i>=0; i--)
	{
		change = heap[0];
		heap[0] = heap[i];
		heap[i] = change;
		root = 0;
		c = 1;
		
		do
		{
			c = 2*root+1;
			if (c<i-1 && heap[c] < heap[c+1])  // 자식 중에 더 큰 값 찾기  
			{ 
				c++;
			}
			
			// 루트보다 자식이 크면 교환 
			if (c<i && heap[root]<heap[c])
			{
				change = heap[root];
				heap[root] = heap[c];
				heap[c] = change;
			}
			root = c; 
		} while (c<i);
	}
	
	for (i = 0; i<number; i++)
	{
		printf("%d ",heap[i]);
	}
	
	return 0;	
}
